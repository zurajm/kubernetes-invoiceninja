apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: invoiceninja
  name: invoiceninja
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: invoiceninja
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: invoiceninja
    spec:
      # Alpine DNS resolve fix: https://github.com/kubernetes/kubernetes/issues/64924#issuecomment-488848061
      # dnsConfig:
      #   options:
      #     - name: ndots
      #       value: "1"
      nodeSelector:
        kubernetes.io/arch: amd64
      containers:
      - name: app
        envFrom:
        # - configMapRef:
        #     name: env
        #     optional: false
        - secretRef:
            name: env-secret
            optional: false
        image: invoiceninja/invoiceninja:5
        imagePullPolicy: IfNotPresent
        resources: {}
        volumeMounts:
        - mountPath: /usr/local/bin/shutdown.sh
          name: config-files
          subPath: shutdown.sh
        - mountPath: /var/www/app/storage
          name: invoiceninja
          subPath: storage
        - mountPath: /var/www/app/public
          name: invoiceninja
          subPath: public
      - name: web
        envFrom:
        - secretRef:
            name: env-secret
            optional: false
        image: nginx:alpine
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        resources:
          requests:
            memory: 128Mi
            cpu: 500m
          limits:
            memory: 250Mi
            cpu: 1000m
        volumeMounts:
        - mountPath: /var/www/app/storage
          name: invoiceninja
          subPath: storage
<<<<<<< HEAD:base/deployment.yaml
        # - mountPath: /var/www/app/public/logo
        #   name: invoiceninja
        #   subPath: logo
=======
        - mountPath: /var/www/app/public/logo
          name: invoiceninja
          subPath: logo
        - mountPath: /var/www/app/public
          name: invoiceninja
          subPath: public
        - mountPath: /etc/nginx/conf.d/in-vhost.conf
          name: nginx
          subPath: in-vhost.conf
        # Cron
      - name: cron
        args:
        - -c
        - trap "break;exit" SIGHUP SIGINT SIGTERM; sleep 300s; while /bin/true; do
          ./artisan ninja:send-invoices; ./artisan ninja:send-reminders; sleep 1d;
          done
        command:
        - /bin/sh
        envFrom:
        - configMapRef:
            name: env
            optional: false
        - secretRef:
            name: env-secret
            optional: false
        image: invoiceninja/invoiceninja
        imagePullPolicy: Always
        resources: {}
        volumeMounts:
        - mountPath: /var/www/app/storage
          name: invoiceninja
          subPath: storage
        - mountPath: /var/www/app/public/logo
          name: invoiceninja
          subPath: logo
>>>>>>> a77ee805750df8ee5c996cfbc034dc6e3370dd95:deployment.yaml
        - mountPath: /var/www/app/public
          name: invoiceninja
          subPath: public
        - mountPath: /etc/nginx/conf.d/in-vhost.conf
          name: config-files
          subPath: in-vhost.conf
          readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: invoiceninja
        persistentVolumeClaim:
          claimName: invoiceninja5-nfs
      - configMap:
          defaultMode: 256
          name: config-files
          optional: false
        name: config-files
